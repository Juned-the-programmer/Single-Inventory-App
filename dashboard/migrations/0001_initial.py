# Generated by Django 3.2.5 on 2022-10-01 11:10

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='category_estimate',
            fields=[
                ('category_name', models.CharField(max_length=100)),
                ('date_created', models.DateField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='category_gst',
            fields=[
                ('category_name', models.CharField(max_length=100)),
                ('date_created', models.DateField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer_estimate',
            fields=[
                ('fullname', models.CharField(max_length=50)),
                ('contactno', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('landmark', models.CharField(max_length=50)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer_gst',
            fields=[
                ('customerid', models.IntegerField()),
                ('fullname', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('contactno', models.CharField(max_length=50)),
                ('gst', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('landmark', models.CharField(max_length=50)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='customeraccount_estimate',
            fields=[
                ('amount', models.FloatField(default=0)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='customeraccount_gst',
            fields=[
                ('amount', models.FloatField(default=0)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='customerpay_estimate',
            fields=[
                ('pending_amount', models.FloatField()),
                ('paid_amount', models.FloatField()),
                ('round_off', models.FloatField()),
                ('date', models.DateField(auto_now_add=True)),
                ('Description', models.CharField(blank=True, default='Cash on Hand', max_length=100, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='customerpay_gst',
            fields=[
                ('pending_amount', models.FloatField()),
                ('paid_amount', models.FloatField()),
                ('round_off', models.FloatField()),
                ('date', models.DateField(auto_now_add=True)),
                ('Description', models.CharField(blank=True, default='Cash on Hand', max_length=100, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='dailyexpense_estimate',
            fields=[
                ('category', models.CharField(max_length=50)),
                ('amount', models.FloatField()),
                ('name', models.CharField(max_length=500)),
                ('date', models.DateField(auto_now_add=True)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='dailyexpense_gst',
            fields=[
                ('category', models.CharField(max_length=50)),
                ('amount', models.FloatField()),
                ('name', models.CharField(max_length=500)),
                ('date', models.DateField(auto_now_add=True)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='dailyincome_estimate',
            fields=[
                ('name', models.CharField(max_length=100)),
                ('amount', models.FloatField()),
                ('date', models.DateField(auto_now_add=True)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='dailyincome_gst',
            fields=[
                ('name', models.CharField(max_length=100)),
                ('amount', models.FloatField()),
                ('date', models.DateField(auto_now_add=True)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Estimate_Purchase',
            fields=[
                ('Bill_no', models.IntegerField()),
                ('date', models.DateField(auto_now_add=True)),
                ('Total_amount', models.FloatField()),
                ('Due_amount', models.FloatField()),
                ('Round_off', models.FloatField()),
                ('Grand_total', models.FloatField()),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Estimate_sales',
            fields=[
                ('Bill_no', models.IntegerField()),
                ('date', models.DateField(auto_now_add=True)),
                ('Total_amount', models.FloatField()),
                ('Due_amount', models.FloatField()),
                ('Round_off', models.FloatField()),
                ('Grand_total', models.FloatField()),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='estimatepurchase_Product',
            fields=[
                ('Bill_no', models.IntegerField()),
                ('product_name', models.CharField(blank=True, max_length=100, null=True)),
                ('unit', models.CharField(max_length=10)),
                ('rate', models.FloatField()),
                ('qty', models.IntegerField()),
                ('dis', models.FloatField()),
                ('netrate', models.FloatField()),
                ('total', models.FloatField()),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='estimatesales_Product',
            fields=[
                ('Bill_no', models.IntegerField()),
                ('product_name', models.CharField(blank=True, max_length=100, null=True)),
                ('unit', models.CharField(max_length=10)),
                ('rate', models.FloatField()),
                ('qty', models.IntegerField()),
                ('dis', models.FloatField()),
                ('netrate', models.FloatField()),
                ('total', models.FloatField()),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='GST_Purchase',
            fields=[
                ('Bill_no', models.IntegerField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('total_amount', models.FloatField()),
                ('CGST', models.FloatField()),
                ('SGST', models.FloatField()),
                ('IGST', models.FloatField()),
                ('Round_off', models.FloatField()),
                ('Grand_total', models.FloatField()),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='gstpurchase_Product',
            fields=[
                ('Bill_no', models.IntegerField()),
                ('hsncode', models.IntegerField()),
                ('product_name', models.CharField(blank=True, max_length=100, null=True)),
                ('unit', models.CharField(max_length=10)),
                ('rate', models.FloatField()),
                ('qty', models.IntegerField()),
                ('gstp', models.FloatField()),
                ('gstamt', models.FloatField()),
                ('total', models.FloatField()),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='gstsale',
            fields=[
                ('Bill_no', models.IntegerField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('total_amount', models.FloatField()),
                ('CGST', models.FloatField()),
                ('SGST', models.FloatField()),
                ('IGST', models.FloatField()),
                ('Round_off', models.FloatField()),
                ('Grand_total', models.FloatField()),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='gstsales_Product',
            fields=[
                ('Bill_no', models.IntegerField()),
                ('hsncode', models.IntegerField()),
                ('product_name', models.CharField(blank=True, max_length=100, null=True)),
                ('unit', models.CharField(max_length=10)),
                ('rate', models.FloatField()),
                ('qty', models.IntegerField()),
                ('gstp', models.FloatField()),
                ('gstamt', models.FloatField()),
                ('total', models.FloatField()),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product_estimate',
            fields=[
                ('product_name', models.CharField(max_length=100)),
                ('product_categ', models.CharField(max_length=50)),
                ('unit', models.CharField(max_length=50)),
                ('selling_price', models.FloatField()),
                ('store_location', models.CharField(max_length=50)),
                ('minimum_stock', models.IntegerField()),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product_gst',
            fields=[
                ('product_name', models.CharField(max_length=100)),
                ('product_categ', models.CharField(max_length=50)),
                ('unit', models.CharField(max_length=50)),
                ('selling_price', models.FloatField()),
                ('store_location', models.CharField(max_length=50)),
                ('minimum_stock', models.IntegerField()),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Stock_estimate',
            fields=[
                ('quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('purchase_price', models.IntegerField(blank=True, default=0, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Stock_gst',
            fields=[
                ('quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('purchase_price', models.IntegerField(blank=True, default=0, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier_estimate',
            fields=[
                ('fullname', models.CharField(max_length=50)),
                ('contactno', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('landmark', models.CharField(max_length=50)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier_gst',
            fields=[
                ('supplierid', models.IntegerField()),
                ('fullname', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('contactno', models.CharField(max_length=50)),
                ('gst', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('landmark', models.CharField(max_length=50)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='supplierpay_gst',
            fields=[
                ('pending_amount', models.FloatField()),
                ('paid_amount', models.FloatField()),
                ('round_off', models.FloatField()),
                ('date', models.DateField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('supplier_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.supplier_gst')),
            ],
        ),
        migrations.CreateModel(
            name='supplierpay_estimate',
            fields=[
                ('pending_amount', models.FloatField()),
                ('paid_amount', models.FloatField()),
                ('round_off', models.FloatField()),
                ('date', models.DateField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('supplier_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.supplier_estimate')),
            ],
        ),
        migrations.CreateModel(
            name='supplieraccount_gst',
            fields=[
                ('amount', models.FloatField(blank=True, default=0, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('supplier_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.supplier_gst')),
            ],
        ),
        migrations.CreateModel(
            name='supplieraccount_estimate',
            fields=[
                ('amount', models.FloatField(blank=True, default=0, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('supplier_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.supplier_estimate')),
            ],
        ),
        migrations.AddIndex(
            model_name='supplier_estimate',
            index=models.Index(fields=['id', 'fullname'], name='dashboard_s_id_459b13_idx'),
        ),
        migrations.AddField(
            model_name='stock_gst',
            name='product',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dashboard.product_gst'),
        ),
        migrations.AddField(
            model_name='stock_estimate',
            name='product',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dashboard.product_estimate'),
        ),
        migrations.AddField(
            model_name='product_gst',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.supplier_gst'),
        ),
        migrations.AddField(
            model_name='product_estimate',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.supplier_estimate'),
        ),
        migrations.AddField(
            model_name='gstsale',
            name='customer_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.customer_gst'),
        ),
        migrations.AddField(
            model_name='gst_purchase',
            name='supplier_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.supplier_gst'),
        ),
        migrations.AddIndex(
            model_name='estimatesales_product',
            index=models.Index(fields=['Bill_no', 'id', 'product_name'], name='dashboard_e_Bill_no_3c8a50_idx'),
        ),
        migrations.AddIndex(
            model_name='estimatepurchase_product',
            index=models.Index(fields=['Bill_no', 'id', 'product_name'], name='dashboard_e_Bill_no_5f39ef_idx'),
        ),
        migrations.AddField(
            model_name='estimate_sales',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.customer_estimate'),
        ),
        migrations.AddField(
            model_name='estimate_purchase',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.supplier_estimate'),
        ),
        migrations.AddField(
            model_name='customerpay_gst',
            name='customer_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.customer_gst'),
        ),
        migrations.AddField(
            model_name='customerpay_estimate',
            name='customer_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.customer_estimate'),
        ),
        migrations.AddField(
            model_name='customeraccount_gst',
            name='customer_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.customer_gst'),
        ),
        migrations.AddField(
            model_name='customeraccount_estimate',
            name='customer_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.customer_estimate'),
        ),
        migrations.AddIndex(
            model_name='customer_estimate',
            index=models.Index(fields=['id', 'fullname'], name='dashboard_c_id_fd838c_idx'),
        ),
        migrations.AddIndex(
            model_name='supplierpay_estimate',
            index=models.Index(fields=['supplier_name', 'id'], name='dashboard_s_supplie_3e4539_idx'),
        ),
        migrations.AddIndex(
            model_name='supplieraccount_estimate',
            index=models.Index(fields=['supplier_name', 'id'], name='dashboard_s_supplie_4715f9_idx'),
        ),
        migrations.AddIndex(
            model_name='stock_estimate',
            index=models.Index(fields=['product', 'id'], name='dashboard_s_product_d2ed95_idx'),
        ),
        migrations.AddIndex(
            model_name='product_estimate',
            index=models.Index(fields=['product_name', 'id', 'supplier'], name='dashboard_p_product_92f855_idx'),
        ),
        migrations.AddIndex(
            model_name='estimate_sales',
            index=models.Index(fields=['Bill_no', 'customer', 'id'], name='dashboard_e_Bill_no_f2992f_idx'),
        ),
        migrations.AddIndex(
            model_name='estimate_purchase',
            index=models.Index(fields=['Bill_no', 'id', 'supplier'], name='dashboard_e_Bill_no_ade141_idx'),
        ),
        migrations.AddIndex(
            model_name='customerpay_estimate',
            index=models.Index(fields=['customer_name', 'id'], name='dashboard_c_custome_3448cd_idx'),
        ),
        migrations.AddIndex(
            model_name='customeraccount_estimate',
            index=models.Index(fields=['id', 'customer_name'], name='dashboard_c_id_64db37_idx'),
        ),
    ]
